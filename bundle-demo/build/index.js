function J(X){const Y=Object.prototype.toString.call(X);if(X instanceof Date||typeof X==="object"&&Y==="[object Date]")return new X.constructor(+X);else if(typeof X==="number"||Y==="[object Number]"||typeof X==="string"||Y==="[object String]")return new Date(X);else return new Date(NaN)}var m=Math.pow(10,8)*24*60*60*1000,NX=-m;var N=43200,v=1440;function j(){return l}var l={};function P(X){const Y=J(X),W=new Date(Date.UTC(Y.getFullYear(),Y.getMonth(),Y.getDate(),Y.getHours(),Y.getMinutes(),Y.getSeconds(),Y.getMilliseconds()));return W.setUTCFullYear(Y.getFullYear()),+X-+W}function C(X,Y){const W=J(X),H=J(Y),x=W.getTime()-H.getTime();if(x<0)return-1;else if(x>0)return 1;else return x}function R(X,Y){const W=J(X),H=J(Y),x=W.getFullYear()-H.getFullYear(),$=W.getMonth()-H.getMonth();return x*12+$}function F(X){return(Y)=>{const H=(X?Math[X]:Math.trunc)(Y);return H===0?0:H}}function y(X,Y){return+J(X)-+J(Y)}function O(X){const Y=J(X);return Y.setHours(23,59,59,999),Y}function _(X){const Y=J(X),W=Y.getMonth();return Y.setFullYear(Y.getFullYear(),W+1,0),Y.setHours(23,59,59,999),Y}function z(X){const Y=J(X);return+O(Y)===+_(Y)}function L(X,Y){const W=J(X),H=J(Y),x=C(W,H),$=Math.abs(R(W,H));let Z;if($<1)Z=0;else{if(W.getMonth()===1&&W.getDate()>27)W.setDate(30);W.setMonth(W.getMonth()-x*$);let B=C(W,H)===-x;if(z(J(X))&&$===1&&C(X,H)===1)B=!1;Z=x*($-Number(B))}return Z===0?0:Z}function D(X,Y,W){const H=y(X,Y)/1000;return F(W?.roundingMethod)(H)}var o={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}},b=(X,Y,W)=>{let H;const x=o[X];if(typeof x==="string")H=x;else if(Y===1)H=x.one;else H=x.other.replace("{{count}}",Y.toString());if(W?.addSuffix)if(W.comparison&&W.comparison>0)return"in "+H;else return H+" ago";return H};function T(X){return(Y={})=>{const W=Y.width?String(Y.width):X.defaultWidth;return X.formats[W]||X.formats[X.defaultWidth]}}var r={full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},d={full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},n={full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},h={date:T({formats:r,defaultWidth:"full"}),time:T({formats:d,defaultWidth:"full"}),dateTime:T({formats:n,defaultWidth:"full"})};var s={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"},u=(X,Y,W,H)=>s[X];function U(X){return(Y,W)=>{const H=W?.context?String(W.context):"standalone";let x;if(H==="formatting"&&X.formattingValues){const Z=X.defaultFormattingWidth||X.defaultWidth,B=W?.width?String(W.width):Z;x=X.formattingValues[B]||X.formattingValues[Z]}else{const Z=X.defaultWidth,B=W?.width?String(W.width):X.defaultWidth;x=X.values[B]||X.values[Z]}const $=X.argumentCallback?X.argumentCallback(Y):Y;return x[$]}}var i={narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},a={narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},t={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},e={narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},XX={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},YX={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},WX=(X,Y)=>{const W=Number(X),H=W%100;if(H>20||H<10)switch(H%10){case 1:return W+"st";case 2:return W+"nd";case 3:return W+"rd"}return W+"th"},p={ordinalNumber:WX,era:U({values:i,defaultWidth:"wide"}),quarter:U({values:a,defaultWidth:"wide",argumentCallback:(X)=>X-1}),month:U({values:t,defaultWidth:"wide"}),day:U({values:e,defaultWidth:"wide"}),dayPeriod:U({values:XX,defaultWidth:"wide",formattingValues:YX,defaultFormattingWidth:"wide"})};function V(X){return(Y,W={})=>{const H=W.width,x=H&&X.matchPatterns[H]||X.matchPatterns[X.defaultMatchWidth],$=Y.match(x);if(!$)return null;const Z=$[0],B=H&&X.parsePatterns[H]||X.parsePatterns[X.defaultParseWidth],E=Array.isArray(B)?HX(B,(A)=>A.test(Z)):xX(B,(A)=>A.test(Z));let w;w=X.valueCallback?X.valueCallback(E):E,w=W.valueCallback?W.valueCallback(w):w;const G=Y.slice(Z.length);return{value:w,rest:G}}}var xX=function(X,Y){for(let W in X)if(Object.prototype.hasOwnProperty.call(X,W)&&Y(X[W]))return W;return},HX=function(X,Y){for(let W=0;W<X.length;W++)if(Y(X[W]))return W;return};function f(X){return(Y,W={})=>{const H=Y.match(X.matchPattern);if(!H)return null;const x=H[0],$=Y.match(X.parsePattern);if(!$)return null;let Z=X.valueCallback?X.valueCallback($[0]):$[0];Z=W.valueCallback?W.valueCallback(Z):Z;const B=Y.slice(x.length);return{value:Z,rest:B}}}var BX=/^(\d+)(th|st|nd|rd)?/i,JX=/\d+/i,ZX={narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},$X={any:[/^b/i,/^(a|c)/i]},KX={narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},wX={any:[/1/i,/2/i,/3/i,/4/i]},EX={narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},GX={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},QX={narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},qX={narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},CX={narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},UX={any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},c={ordinalNumber:f({matchPattern:BX,parsePattern:JX,valueCallback:(X)=>parseInt(X,10)}),era:V({matchPatterns:ZX,defaultMatchWidth:"wide",parsePatterns:$X,defaultParseWidth:"any"}),quarter:V({matchPatterns:KX,defaultMatchWidth:"wide",parsePatterns:wX,defaultParseWidth:"any",valueCallback:(X)=>X+1}),month:V({matchPatterns:EX,defaultMatchWidth:"wide",parsePatterns:GX,defaultParseWidth:"any"}),day:V({matchPatterns:QX,defaultMatchWidth:"wide",parsePatterns:qX,defaultParseWidth:"any"}),dayPeriod:V({matchPatterns:CX,defaultMatchWidth:"any",parsePatterns:UX,defaultParseWidth:"any"})};var I={code:"en-US",formatDistance:b,formatLong:h,formatRelative:u,localize:p,match:c,options:{weekStartsOn:0,firstWeekContainsDate:1}};function g(X,Y,W){const H=j(),x=W?.locale??H.locale??I,Z=C(X,Y);if(isNaN(Z))throw new RangeError("Invalid time value");const B=Object.assign({},W,{addSuffix:W?.addSuffix,comparison:Z});let E,w;if(Z>0)E=J(Y),w=J(X);else E=J(X),w=J(Y);const G=D(w,E),A=(P(w)-P(E))/1000,K=Math.round((G-A)/60);let q;if(K<2)if(W?.includeSeconds)if(G<5)return x.formatDistance("lessThanXSeconds",5,B);else if(G<10)return x.formatDistance("lessThanXSeconds",10,B);else if(G<20)return x.formatDistance("lessThanXSeconds",20,B);else if(G<40)return x.formatDistance("halfAMinute",0,B);else if(G<60)return x.formatDistance("lessThanXMinutes",1,B);else return x.formatDistance("xMinutes",1,B);else if(K===0)return x.formatDistance("lessThanXMinutes",1,B);else return x.formatDistance("xMinutes",K,B);else if(K<45)return x.formatDistance("xMinutes",K,B);else if(K<90)return x.formatDistance("aboutXHours",1,B);else if(K<v){const Q=Math.round(K/60);return x.formatDistance("aboutXHours",Q,B)}else if(K<2520)return x.formatDistance("xDays",1,B);else if(K<N){const Q=Math.round(K/v);return x.formatDistance("xDays",Q,B)}else if(K<N*2)return q=Math.round(K/N),x.formatDistance("aboutXMonths",q,B);if(q=L(w,E),q<12){const Q=Math.round(K/N);return x.formatDistance("xMonths",Q,B)}else{const Q=q%12,S=Math.trunc(q/12);if(Q<3)return x.formatDistance("aboutXYears",S,B);else if(Q<9)return x.formatDistance("overXYears",S,B);else return x.formatDistance("almostXYears",S+1,B)}}var k=new Date,M=new Date(k.getFullYear(),3,16);if(M<k)M.setFullYear(k.getFullYear()+1);var VX=g(k,M);console.log(VX,"until your birthday");
